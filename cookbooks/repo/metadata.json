{
  "maintainer": "RightScale, Inc.",
  "suggestions": {
  },
  "maintainer_email": "support@rightscale.com",
  "long_description": "= RightScale Repo Resource\n\n== DESCRIPTION:\n\nThis cookbook provides abstract 'repo' resource for managing code download from GIT, SVN or ROS code repositories.\n\n\n== DETAILS:\n\n=== General\nThis cookbook is intended to be used in conjunction with cookbooks that contain\nLightweight Providers which implement the 'repo' interface. See the RightScale\nrepo_git cookbook for an example.\n\nFor more about Lightweight Resources and Providers (LWRPs), please see the Chef\nwiki at: http://wiki.opscode.com/display/chef/Lightweight+Resources+and+Providers+%28LWRP%29\n  \n== REQUIREMENTS:\n\n*  One of 'repo' provider: 'repo_git', 'repo_svn' or 'repo_ros' cookbooks must be present in your cookbook repository\n*  Ros implementation depends on either the 'rs_utils::install_tools' or 'rs_tools:default' recipe\n\n\n== SETUP:\n\n* Place repo::default recipe into your runlist to setup the repo resource.  When\n  using a RightScale ServerTemplate, this will also automatically add the\n  required attributes to your ServerTemplate inputs.\n\n\n== USAGE:\n\n=== General\n* Add 'repo' resource call in your recipe and provide all required parameters.\n* Add 'destination' and 'action' attributes to your 'repo' resource.\n\n* Set desired action for your 'repo' resource\n  It can be :pull or :capistrano_pull\n  :pull - perform basic 'repo' action, just pulling your code from remote repo.\n  :capistrano_pull - performs pulling and backup of yuor code, see: http://wiki.opscode.com/display/chef/Deploy+Resource#DeployResource-TheDeployStrategies\n\n=== Examples\n\n:pull Example:\n\nrepo 'default' do\n  destination '/tmp/repo'\n  action :pull\nend\n\n:capistrano_pull Example:\n\nrepo 'default' do\n  destination '/tmp/repo'\n  action :capistrano_pull\n  app_user                    'rightscale' #owner of created repo directories\n  purge_before_symlink        %w{tmp} #An array of paths, relative to app root, to be removed from a checkout before symlinking\n  create_dirs_before_symlink  %w{log dir2}  #A hash that maps files in the shared directory to their paths in the current release\n  symlinks                    ({}) #A hash that maps files in the shared directory to their paths in the current release\n  environment                 ({}) #A hash of the form {'ENV_VARIABLE'=>'VALUE'}\nend\n\n=== SVN options:\n  svn_username                Svn username\n  svn_password                Svn password\n\n=== ROS options:\n  storage_account_provider    S3 or Cloudfiles currently supported\n  storage_account_id          'Amazon account id' #For Amazon S3, use your Amazon access key ID (e.g., cred:AWS_ACCESS_KEY_ID). For Rackspace Cloud Files, use your Rackspace login username (e.g., cred:RACKSPACE_USERNAME).\n  storage_account_secret      'Amazon account password' # For Amazon S3, use your AWS secret access key (e.g., cred:AWS_SECRET_ACCESS_KEY). For Rackspace Cloud Files, use your Rackspace account API key (e.g., cred:RACKSPACE_AUTH_KEY).\n  container                   'Your_bucket' #For Amazon S3, use the bucket name. For Rackspace Cloud Files, use the container name.\n  prefix                      'source.tar.gz' #Defines the prefix of the source repo file name that will be used to name the downloaded repo file.\n\n\n= LICENSE\n\nCopyright RightScale, Inc. All rights reserved.  All access and use subject to the\nRightScale Terms of Service available at http://www.rightscale.com/terms.php and,\nif applicable, other agreements such as a RightScale Master Subscription Agreement.\n",
  "description": "Abstract cookbook for managing source code repositories.",
  "conflicting": {
  },
  "platforms": {
  },
  "license": "Copyright RightScale, Inc. All rights reserved.  All access and use subject to the RightScale Terms of Service available at http://www.rightscale.com/terms.php and, if applicable, other agreements such as a RightScale Master Subscription Agreement.\n",
  "providing": {
  },
  "recipes": {
    "repo::do_pull": "Recipe for pulling project repos from svn, git or ros.",
    "repo::default": "Default recipe for setup resources provided"
  },
  "attributes": {
    "repo/default/storage_account_provider": {
      "required": "optional",
      "calculated": false,
      "recipes": [
        "repo::default"
      ],
      "description": "Location where the source file is saved. Used to pull source from Remote Object Stores.",
      "display_name": "ROS Storage Account Provider",
      "type": "string",
      "choice": [
        "S3",
        "CloudFiles"
      ]
    },
    "repo/default/git_ssh_key": {
      "default": "",
      "required": "recommended",
      "calculated": false,
      "recipes": [
        "repo::default"
      ],
      "description": "The private SSH key of the git repository.",
      "display_name": "Git SSH Key",
      "type": "string",
      "choice": [

      ]
    },
    "repo/default/destination": {
      "required": "recommended",
      "calculated": false,
      "recipes": [
        "repo::default"
      ],
      "description": "Destination location path for project repo",
      "display_name": "Project App root",
      "type": "string",
      "choice": [

      ]
    },
    "repo/default/storage_account_secret": {
      "required": "optional",
      "calculated": false,
      "recipes": [
        "repo::default"
      ],
      "description": "In order to write the dump file to the specified cloud storage location, you will need to provide cloud authentication credentials. For Amazon S3, use your AWS secret access key (e.g., cred:AWS_SECRET_ACCESS_KEY). For Rackspace Cloud Files, use your Rackspace account API key (e.g., cred:RACKSPACE_AUTH_KEY).",
      "display_name": "ROS Storage Account Secret",
      "type": "string",
      "choice": [

      ]
    },
    "repo/default/svn_username": {
      "default": "",
      "required": "optional",
      "calculated": false,
      "recipes": [
        "repo::default"
      ],
      "description": "Username for SVN repository.",
      "display_name": "SVN username",
      "type": "string",
      "choice": [

      ]
    },
    "repo/default/perform_action": {
      "default": "pull",
      "required": "optional",
      "calculated": false,
      "recipes": [
        "repo::default"
      ],
      "description": "Choose the pull action which will be performed, 'pull'- standard repo pull, 'capistrano_pull' standard pull and then capistrano deployment style will be applied.",
      "display_name": "Action",
      "type": "string",
      "choice": [
        "pull",
        "capistrano_pull"
      ]
    },
    "repo/default/storage_account_id": {
      "required": "optional",
      "calculated": false,
      "recipes": [
        "repo::default"
      ],
      "description": "In order to write the repository to the specified cloud storage location, you need to provide cloud authentication credentials. For Amazon S3, use your Amazon access key ID (e.g., cred:AWS_ACCESS_KEY_ID). For Rackspace Cloud Files, use your Rackspace login username (e.g., cred:RACKSPACE_USERNAME).",
      "display_name": "ROS Storage Account ID",
      "type": "string",
      "choice": [

      ]
    },
    "repo/default/container": {
      "required": "optional",
      "calculated": false,
      "recipes": [
        "repo::default"
      ],
      "description": "The cloud storage location where the dump file will be saved to or restored from. For Amazon S3, use the bucket name. For Rackspace Cloud Files, use the container name.",
      "display_name": "ROS Container",
      "type": "string",
      "choice": [

      ]
    },
    "repo/default/revision": {
      "default": "master",
      "required": "recommended",
      "calculated": false,
      "recipes": [
        "repo::default"
      ],
      "description": "Enter the branch of your repository you want to fetch. Default: master",
      "display_name": "Branch/Tag",
      "type": "string",
      "choice": [

      ]
    },
    "repo/default/repository": {
      "required": "recommended",
      "calculated": false,
      "recipes": [
        "repo::default"
      ],
      "description": "The URL of your svn or git repository where your application code will be checked out. Ex: http://mysvn.net/app/ or git@github.com/whoami/project",
      "display_name": "Repository Url",
      "type": "string",
      "choice": [

      ]
    },
    "repo/default/svn_password": {
      "default": "",
      "required": "optional",
      "calculated": false,
      "recipes": [
        "repo::default"
      ],
      "description": "Password for SVN repository.",
      "display_name": "SVN password",
      "type": "string",
      "choice": [

      ]
    },
    "repo/default/prefix": {
      "required": "optional",
      "calculated": false,
      "recipes": [
        "repo::default"
      ],
      "description": "The prefix that will be used to name/locate the backup of a particular source repository. Defines the prefix of the source repo file name that will be used to name the downloaded repository file.",
      "display_name": "ROS Prefix",
      "type": "string",
      "choice": [

      ]
    },
    "repo/default/provider": {
      "default": "repo_git",
      "required": "recommended",
      "calculated": false,
      "recipes": [
        "repo::default"
      ],
      "description": "Select a repository provider: repo_git for Git, repo_svn for SVN or repo_ros for Remote Ojbect Store. Default: repo_git",
      "display_name": "Repository Provider",
      "type": "string",
      "choice": [
        "repo_git",
        "repo_svn",
        "repo_ros"
      ]
    }
  },
  "replacing": {
  },
  "dependencies": {
    "repo_svn": [

    ],
    "repo_git": [

    ],
    "repo_ros": [

    ],
    "rs_utils": [

    ]
  },
  "name": "repo",
  "groupings": {
  },
  "version": "0.0.1",
  "recommendations": {
  }
}